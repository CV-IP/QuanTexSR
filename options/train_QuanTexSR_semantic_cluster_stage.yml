# general settings
# name: debug0001_VGG_Semantic_Codebook_cluster
name: 0001_VGG_Semantic_Codebook_cluster
model_type: QuanTexSRGANModel 
scale: 4
num_gpu: 1 # set num_gpu: 0 for cpu mode
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: General_Image_Train
    type: PairedImageDataset
    dataroot_gt: ../datasets/HQ_sub_samename
    dataroot_lq: ../datasets/HQ_sub_samename
    io_backend:
      type: disk
 
    gt_size: 256
    use_resize_crop: true 
    use_flip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 64 
    dataset_enlarge_ratio: 1

    prefetch_mode: ~

  val:
    name: General_Image_Valid
    type: PairedImageDataset
    dataroot_gt: ../datasets/FullImage/valid_GT
    dataroot_lq: ../datasets/FullImage/valid_GT
    io_backend:
      type: disk

# network structures
network_g:
  type: MultiScaleVGGCluster 
  gt_resolution: 256
  LQ_stage: false
  codebook_dist_func: 'l2'
  latent_size: 32
    
network_d:
  type: UNetDiscriminatorSN 
  num_in_ch: 3

# path
path:
  pretrain_network_g: ~ 
  strict_load: false 
  # resume_state: ~

# training settings
train:
  optim_g:
    type: Adam
    lr: !!float 1e-3
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [50000, 100000, 150000, 200000, 250000, 300000, 350000]
    gamma: 1

  total_iter: 2000000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 0.0 
    reduction: mean
  perceptual_opt:
    type: LPIPSLoss
    loss_weight: !!float 0.0 
  gan_opt:
    type: GANLoss
    gan_type: hinge
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: 0.0
  codebook_opt:
    loss_weight: 1.0

  net_d_iters: 1
  net_d_init_iters: !!float 1e9 

# validation settingsÂ·
val:
  val_freq: !!float 5e9 
  save_img: true

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: true
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: true
    lpips:
      type: calculate_lpips

# logging settings
logger:
  print_freq: 10
  save_checkpoint_freq: !!float 1e9
  save_latest_freq: !!float 5e2
  show_tf_imgs_freq: !!float 100
  use_tb_logger: true
  wandb:
    # project: ESRGAN
    # resume_id: ~

# dist training settings
# dist_params:
  # backend: nccl
  # port: 16500 #29500
