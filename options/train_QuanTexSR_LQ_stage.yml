# general settings
name: 0001_QSR_Semantic_RRDB_LQ_stage
name: 0002_QSR_Semantic_RRDB_LQ_stage
name: 0003_QSR_Semantic_RRDB_LQ_stage
name: 0006_QSR_Semantic_RRDB_LQ_stage
name: 0007_QSR_Semantic_RRDB_LQ_stage
name: 0008_QSR_Semantic_RRDB_LQ_stage
name: 0009_QSR_Semantic_RRDB_LQ_stage
name: 0010_QSR_Semantic_RRDB_LQ_stage
# name: debug_0001_QSR_Semantic_RRDB_LQ_stage
model_type: QuanTexSRGANModel
scale: 4
num_gpu: 2 # set num_gpu: 0 for cpu mode
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: General_Image_Train
    type: PairedImageDataset
    # type: BSRGANTrainDataset 
    dataroot_gt: ../datasets/HQ_sub_samename
    dataroot_lq: ../datasets/LQ_sub_samename_X4
    io_backend:
      type: disk
 
    gt_size: 256
    use_resize_crop: true 
    use_flip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 2
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 1

    prefetch_mode: ~

  val:
    name: General_Image_Valid
    type: PairedImageDataset
    dataroot_gt: ../datasets/test_datasets/div2k_valid/gt_mod16
    dataroot_lq: ../datasets/test_datasets/div2k_valid/lrx4
    # crop_eval_size: 384 
    io_backend:
      type: disk

# network structures
network_g:
  type: QuanTexSRNet 
  gt_resolution: 256
  norm_type: 'gn'
  act_type: 'silu'
  scale_factor: 4
  content_encoder_path: ../compare_methods/Real-ESRGAN-master/experiments/pretrained_models/RealESRNet_x4plus.pth
  codebook_params: # has to order from low to high
    - [32, 1024, 512]

  # frozen_module_keywords: ['content_encoder', 'esrgan_model', 'quantize', 'decoder', 'after_quant_group', 'out_conv']
  # frozen_module_keywords: ['quantize', 'decoder', 'after_quant_group', 'out_conv']
  frozen_module_keywords: ['quantize']
  # frozen_module_keywords: ['esrgan_model', 'quantize']
  # for HQ stage training
  LQ_stage: true

network_d:
  type: UNetDiscriminatorSN 
  num_in_ch: 3

# path
path:
  pretrain_network_g: ./experiments/0018_VQGAN_Multiscale_WSemantic_Attn_RRDBFuse_HQ_stage/models/net_g_latest.pth
  pretrain_network_d: ./experiments/0018_VQGAN_Multiscale_WSemantic_Attn_RRDBFuse_HQ_stage/models/net_d_latest.pth
  # pretrain_network_g: ./experiments/0006_QSR_Semantic_RRDB_LQ_stage/models/net_g_best_.pth
  # pretrain_network_d: ./experiments/0006_QSR_Semantic_RRDB_LQ_stage/models/net_d_best_.pth
  strict_load: false 
  # resume_state: ~

# training settings
train:
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    # milestones: [50000, 100000, 200000, 300000]
    # gamma: 1
    milestones: [50000, 100000, 150000, 200000, 250000, 300000, 350000]
    gamma: 1 

  total_iter: 2000000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0 
    reduction: mean
  perceptual_opt:
    # type: LPIPSLoss
    # loss_weight: !!float 1.0 
    type: PerceptualLoss
    layer_weights:
      # before relu
      'conv1_2': 0.1
      'conv2_2': 0.1
      'conv3_4': 1
      'conv4_4': 1
      'conv5_4': 1
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: !!float 1.0
    style_weight: !!float 1e2
    range_norm: false
    criterion: l1
  gan_opt:
    type: GANLoss
    gan_type: hinge
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: 0.1
  codebook_opt:
    loss_weight: 1.0
    # loss_weight: 0.0

  net_d_iters: 1
  # net_d_init_iters: !!float 0 
  net_d_init_iters: !!float 1e4 

# validation settingsÂ·
val:
  val_freq: !!float 5e3
  save_img: true

  key_metric: lpips
  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: true
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: true
    lpips:
      type: calculate_lpips
      better: lower

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 1e9
  save_latest_freq: !!float 5e3
  show_tf_imgs_freq: !!float 1e3
  use_tb_logger: true

wandb:
    # project: ESRGAN
    # resume_id: ~

# dist training settings
# dist_params:
  # backend: nccl
  # port: 16500 #29500
