# general settings
# name: 001_VQGAN_Attn_HQ_stage
# name: 003_VQGAN_3scale_Attn_HQ_stage
# # name: 011_1scale_Attn_VQGAN_Attn_LQ_stage
# name: 011_1scale_Attn_VQGAN_Attn_LQ_stage
# name: 012_3scale_Attn_VQGAN_Attn_LQ_stage
# name: 021_Attn_VQGAN_nearest_LQ_stage
# name: 013_noAttn_VQGAN_LQ_stage
# # name: 101_3_scale_HQ_stage_sumfusion
# name: 030_VQGAN_Upconcat_Attn_LQ_stage
# name: 031_VQGAN_Upconcat_Attn_VGGLoss_LQ_stage
# name: 030_SFT_wNorm_upconcat
name: 102_VQGAN_Upconcat_noNorm_noShortcut_noSFT_HQ_stage_resume101
# model_type: MultiScaleVQGANModelSFTShortcutInfoNCE
model_type: MultiScaleVQGANModelSFTShortcut
scale: 1
num_gpu: 1 # set num_gpu: 0 for cpu mode
manual_seed: 0

# dataset and data loader settings
datasets:
  test_1:  # the 1st test dataset
    name: GeneralImage
    type: PairedImageDataset
    dataroot_gt: /root/experiments/datasets/FullImage/valid_GT
    dataroot_lq: /root/experiments/datasets/FullImage/valid_GT
    io_backend:
      type: disk

# network structures
network_g:
  type: MultiScaleVQVAEUpconcatSimple
  in_channel: 3
  n_res_block: 2
  n_res_channel: 64
  beta: 0.25
  gt_resolution: 256
  norm_type: 'gn'
  act_type: 'leakyrelu'
  enc_quant_fusion_type: concat 
  with_shortcut: true
  # attn_scales: [16, 32, 64]
  attn_scales: [16]
  codebook_params: # has to order from low to high
    - [16, 1024, 256, 'l2'] 
    - [32, 512, 128, 'l2']
    - [64, 512, 128, 'l2']

  # for HQ stage training
  LQ_stage: false
  use_codebook_cls: false 
  codebook_margin: 0.1
  codebook_norm_feature: 1.0
  fixed_disc: false
  # hq_path: /root/experiments/BasicSR/experiments/001_VQGAN_Attn_HQ_stage/models/net_g_90000.pth
  # hq_path: /root/experiments/BasicSR/experiments/805_LQ_stage_SFT_shortcut_GN_wo_gt/models/net_g_495000.pth
  # hq_path: /root/experiments/BasicSR/experiments/804_SFT_before_after_with_dec_enc_gn_good_monster/models/net_g_160000.pth
  hq_path: /root/experiments/BasicSR/experiments/030_VQGAN_Upconcat_Attn_HQ_stage/models/net_g_60000.pth
  strict_load: false 

network_d:
  type: UnetDiscriminator 
  image_size: 256

# path
path:
  # pretrain_model_g: /root/experiments/BasicSR/experiments/001_1_scale_HQ_stage_1024_codebook_Newmodel/models/net_g_35000.pth
  # pretrain_model_g: /root/experiments/BasicSR/experiments/001_2_scale_HQ_stage_1024_codebook_Newmodel/models/net_g_35000.pth
  # pretrain_model_g: /root/experiments/BasicSR/experiments/001_3_scale_HQ_stage_1024_codebook_Newmodel/models/net_g_35000.pth 
  # pretrain_model_g: /root/experiments/BasicSR/experiments/101_3_scale_HQ_stage_sumfusion/models/net_g_10000.pth
  # pretrain_model_g: /root/experiments/BasicSR/experiments/101_3_scale_HQ_stage_upconcatfusion_archived_20210712_110459/models/net_g_70000.pth
  # pretrain_model_g: /root/experiments/BasicSR/experiments/102_2_scale_HQ_stage_bottleneck/models/net_g_80000.pth
  # pretrain_model_g: /root/experiments/BasicSR/experiments/805_LQ_stage_SFT_shortcut_GN_wo_gt/models/net_g_495000.pth
  # pretrain_model_g: /root/experiments/BasicSR/experiments/804_SFT_before_after_with_dec_enc_gn_good_monster/models/net_g_160000.pth
  # pretrain_model_g: ~
  pretrain_model_g: /root/experiments/BasicSR/experiments/030_VQGAN_Upconcat_Attn_HQ_stage/models/net_g_60000.pth
  # pretrain_model_d: /root/experiments/BasicSR/experiments/001_1_scale_HQ_stage_1024_codebook_Newmodel/models/net_d_35000.pth
  # pretrain_model_d: /root/experiments/BasicSR/experiments/001_2_scale_HQ_stage_1024_codebook_Newmodel/models/net_d_35000.pth
  # pretrain_model_d: /root/experiments/BasicSR/experiments/001_3_scale_HQ_stage_1024_codebook_Newmodel/models/net_d_35000.pth
  # pretrain_model_d: /root/experiments/BasicSR/experiments/102_2_scale_HQ_stage_bottleneck/models/net_d_80000.pth
  pretrain_model_d: ~  
  strict_load: false 
  # resume_state: /root/experiments/BasicSR/experiments/001_2_scale_with_gan_LQ/training_states/90000.state
  # resume_state: ~

# validation settingsÂ·
val:
  save_img: true
  suffix: ~  # add suffix to saved images, if None, use exp name
  # metrics:
  #   psnr: # metric name, can be arbitrary
  #     type: calculate_psnr
  #     crop_border: 4
  #     test_y_channel: true
  #   ssim:
  #     type: calculate_ssim
  #     crop_border: 4
  #     test_y_channel: true
  #   lpips:
  #     type: calculate_lpips

